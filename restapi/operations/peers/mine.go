// Code generated by go-swagger; DO NOT EDIT.

package peers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// MineHandlerFunc turns a function with the right signature into a mine handler
type MineHandlerFunc func(MineParams) middleware.Responder

// Handle executing the request and returning a response
func (fn MineHandlerFunc) Handle(params MineParams) middleware.Responder {
	return fn(params)
}

// MineHandler interface for that can handle valid mine params
type MineHandler interface {
	Handle(MineParams) middleware.Responder
}

// NewMine creates a new http.Handler for the mine operation
func NewMine(ctx *middleware.Context, handler MineHandler) *Mine {
	return &Mine{Context: ctx, Handler: handler}
}

/*Mine swagger:route GET /mine peers mine

Mine transactions and announce to peers

*/
type Mine struct {
	Context *middleware.Context
	Handler MineHandler
}

func (o *Mine) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewMineParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
